FROM rust:1-alpine AS chef
USER root
RUN apk add --no-cache musl-dev & cargo install cargo-chef
WORKDIR /microservices

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /microservices/recipe.json recipe.json
# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --recipe-path recipe.json
# Build application
RUN apk add --no-cache protoc
COPY . .
RUN cargo build --release --bin health-check

# We do not need the Rust toolchain to run the binary!
FROM debian:buster-slim AS runtime
WORKDIR /microservices
COPY --from=builder /microservices/target/release/health-check /usr/local/bin
# Set environment variable
ENV AUTH_SERVICE_HOST_NAME=auth
# First command that is executed when starting the container (default is shell)
ENTRYPOINT ["/usr/local/bin/health-check"]
